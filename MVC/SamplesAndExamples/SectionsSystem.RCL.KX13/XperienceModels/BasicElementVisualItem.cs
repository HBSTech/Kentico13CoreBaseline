//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at https://docs.xperience.io/.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine;
using CMS.DocumentEngine.Types.SectionsSystem;

[assembly: RegisterDocumentType(BasicElementVisualItem.CLASS_NAME, typeof(BasicElementVisualItem))]

namespace CMS.DocumentEngine.Types.SectionsSystem
{
    /// <summary>
    /// Represents a content item of type BasicElementVisualItem.
    /// </summary>
    public partial class BasicElementVisualItem : TreeNode
    {
        #region "Constants and variables"

        /// <summary>
        /// The name of the data class.
        /// </summary>
        public const string CLASS_NAME = "SectionsSystem.BasicElementVisualItem";


        /// <summary>
        /// The instance of the class that provides extended API for working with BasicElementVisualItem fields.
        /// </summary>
        private readonly BasicElementVisualItemFields mFields;

        #endregion


        #region "Properties"

        /// <summary>
        /// BasicElementVisualItemID.
        /// </summary>
        [DatabaseIDField]
        public int BasicElementVisualItemID
        {
            get
            {
                return ValidationHelper.GetInteger(GetValue("BasicElementVisualItemID"), 0);
            }
            set
            {
                SetValue("BasicElementVisualItemID", value);
            }
        }


        /// <summary>
        /// Name.
        /// </summary>
        [DatabaseField]
        public string VisualItemTypeName
        {
            get
            {
                return ValidationHelper.GetString(GetValue("VisualItemTypeName"), @"");
            }
            set
            {
                SetValue("VisualItemTypeName", value);
            }
        }


        /// <summary>
        /// Visual Item Type.
        /// </summary>
        [DatabaseField]
        public string VisualItemType
        {
            get
            {
                return ValidationHelper.GetString(GetValue("VisualItemType"), @"Image");
            }
            set
            {
                SetValue("VisualItemType", value);
            }
        }


        /// <summary>
        /// If checked, then you can apply a link to this Visual Item.
        /// </summary>
        [DatabaseField]
        public bool VisualItemHasLink
        {
            get
            {
                return ValidationHelper.GetBoolean(GetValue("VisualItemHasLink"), false);
            }
            set
            {
                SetValue("VisualItemHasLink", value);
            }
        }


        /// <summary>
        /// Image Url.
        /// </summary>
        [DatabaseField]
        public string VisualItemImageUrl
        {
            get
            {
                return ValidationHelper.GetString(GetValue("VisualItemImageUrl"), @"");
            }
            set
            {
                SetValue("VisualItemImageUrl", value);
            }
        }


        /// <summary>
        /// Image Alt Text.
        /// </summary>
        [DatabaseField]
        public string VisualItemImageAlt
        {
            get
            {
                return ValidationHelper.GetString(GetValue("VisualItemImageAlt"), @"");
            }
            set
            {
                SetValue("VisualItemImageAlt", value);
            }
        }


        /// <summary>
        /// Icon Source.
        /// </summary>
        [DatabaseField]
        public string VisualItemIconSource
        {
            get
            {
                return ValidationHelper.GetString(GetValue("VisualItemIconSource"), @"FontAwesome");
            }
            set
            {
                SetValue("VisualItemIconSource", value);
            }
        }


        /// <summary>
        /// What the icon is (ex 'star' or 'dollar sign').
        /// </summary>
        [DatabaseField]
        public string VisualItemIconAlt
        {
            get
            {
                return ValidationHelper.GetString(GetValue("VisualItemIconAlt"), @"");
            }
            set
            {
                SetValue("VisualItemIconAlt", value);
            }
        }


        /// <summary>
        /// VisualItemFontAwesomeIconCode.
        /// </summary>
        [DatabaseField]
        public string VisualItemFontAwesomeIconCode
        {
            get
            {
                return ValidationHelper.GetString(GetValue("VisualItemFontAwesomeIconCode"), @"");
            }
            set
            {
                SetValue("VisualItemFontAwesomeIconCode", value);
            }
        }


        /// <summary>
        /// VisualItemCanvasIconCode.
        /// </summary>
        [DatabaseField]
        public string VisualItemCanvasIconCode
        {
            get
            {
                return ValidationHelper.GetString(GetValue("VisualItemCanvasIconCode"), @"");
            }
            set
            {
                SetValue("VisualItemCanvasIconCode", value);
            }
        }


        /// <summary>
        /// VisualItemCustomIconCode.
        /// </summary>
        [DatabaseField]
        public string VisualItemCustomIconCode
        {
            get
            {
                return ValidationHelper.GetString(GetValue("VisualItemCustomIconCode"), @"");
            }
            set
            {
                SetValue("VisualItemCustomIconCode", value);
            }
        }


        /// <summary>
        /// LInk Url.
        /// </summary>
        [DatabaseField]
        public string VisualItemLinkUrl
        {
            get
            {
                return ValidationHelper.GetString(GetValue("VisualItemLinkUrl"), @"");
            }
            set
            {
                SetValue("VisualItemLinkUrl", value);
            }
        }


        /// <summary>
        /// Link Target.
        /// </summary>
        [DatabaseField]
        public string VisualItemLinkTarget
        {
            get
            {
                return ValidationHelper.GetString(GetValue("VisualItemLinkTarget"), @"_self");
            }
            set
            {
                SetValue("VisualItemLinkTarget", value);
            }
        }


        /// <summary>
        /// Gets an object that provides extended API for working with BasicElementVisualItem fields.
        /// </summary>
        [RegisterProperty]
        public BasicElementVisualItemFields Fields
        {
            get
            {
                return mFields;
            }
        }


        /// <summary>
        /// Provides extended API for working with BasicElementVisualItem fields.
        /// </summary>
        [RegisterAllProperties]
        public partial class BasicElementVisualItemFields : AbstractHierarchicalObject<BasicElementVisualItemFields>
        {
            /// <summary>
            /// The content item of type BasicElementVisualItem that is a target of the extended API.
            /// </summary>
            private readonly BasicElementVisualItem mInstance;


            /// <summary>
            /// Initializes a new instance of the <see cref="BasicElementVisualItemFields" /> class with the specified content item of type BasicElementVisualItem.
            /// </summary>
            /// <param name="instance">The content item of type BasicElementVisualItem that is a target of the extended API.</param>
            public BasicElementVisualItemFields(BasicElementVisualItem instance)
            {
                mInstance = instance;
            }


            /// <summary>
            /// BasicElementVisualItemID.
            /// </summary>
            public int ID
            {
                get
                {
                    return mInstance.BasicElementVisualItemID;
                }
                set
                {
                    mInstance.BasicElementVisualItemID = value;
                }
            }


            /// <summary>
            /// Name.
            /// </summary>
            public string VisualItemTypeName
            {
                get
                {
                    return mInstance.VisualItemTypeName;
                }
                set
                {
                    mInstance.VisualItemTypeName = value;
                }
            }


            /// <summary>
            /// Visual Item Type.
            /// </summary>
            public string VisualItemType
            {
                get
                {
                    return mInstance.VisualItemType;
                }
                set
                {
                    mInstance.VisualItemType = value;
                }
            }


            /// <summary>
            /// If checked, then you can apply a link to this Visual Item.
            /// </summary>
            public bool VisualItemHasLink
            {
                get
                {
                    return mInstance.VisualItemHasLink;
                }
                set
                {
                    mInstance.VisualItemHasLink = value;
                }
            }


            /// <summary>
            /// Image Url.
            /// </summary>
            public string VisualItemImageUrl
            {
                get
                {
                    return mInstance.VisualItemImageUrl;
                }
                set
                {
                    mInstance.VisualItemImageUrl = value;
                }
            }


            /// <summary>
            /// Image Alt Text.
            /// </summary>
            public string VisualItemImageAlt
            {
                get
                {
                    return mInstance.VisualItemImageAlt;
                }
                set
                {
                    mInstance.VisualItemImageAlt = value;
                }
            }


            /// <summary>
            /// Icon Source.
            /// </summary>
            public string VisualItemIconSource
            {
                get
                {
                    return mInstance.VisualItemIconSource;
                }
                set
                {
                    mInstance.VisualItemIconSource = value;
                }
            }


            /// <summary>
            /// What the icon is (ex 'star' or 'dollar sign').
            /// </summary>
            public string VisualItemIconAlt
            {
                get
                {
                    return mInstance.VisualItemIconAlt;
                }
                set
                {
                    mInstance.VisualItemIconAlt = value;
                }
            }


            /// <summary>
            /// VisualItemFontAwesomeIconCode.
            /// </summary>
            public string VisualItemFontAwesomeIconCode
            {
                get
                {
                    return mInstance.VisualItemFontAwesomeIconCode;
                }
                set
                {
                    mInstance.VisualItemFontAwesomeIconCode = value;
                }
            }


            /// <summary>
            /// VisualItemCanvasIconCode.
            /// </summary>
            public string VisualItemCanvasIconCode
            {
                get
                {
                    return mInstance.VisualItemCanvasIconCode;
                }
                set
                {
                    mInstance.VisualItemCanvasIconCode = value;
                }
            }


            /// <summary>
            /// VisualItemCustomIconCode.
            /// </summary>
            public string VisualItemCustomIconCode
            {
                get
                {
                    return mInstance.VisualItemCustomIconCode;
                }
                set
                {
                    mInstance.VisualItemCustomIconCode = value;
                }
            }


            /// <summary>
            /// LInk Url.
            /// </summary>
            public string VisualItemLinkUrl
            {
                get
                {
                    return mInstance.VisualItemLinkUrl;
                }
                set
                {
                    mInstance.VisualItemLinkUrl = value;
                }
            }


            /// <summary>
            /// Link Target.
            /// </summary>
            public string VisualItemLinkTarget
            {
                get
                {
                    return mInstance.VisualItemLinkTarget;
                }
                set
                {
                    mInstance.VisualItemLinkTarget = value;
                }
            }
        }

        #endregion


        #region "Constructors"

        /// <summary>
        /// Initializes a new instance of the <see cref="BasicElementVisualItem" /> class.
        /// </summary>
        public BasicElementVisualItem() : base(CLASS_NAME)
        {
            mFields = new BasicElementVisualItemFields(this);
        }

        #endregion
    }
}