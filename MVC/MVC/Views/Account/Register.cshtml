@model Generic.Models.User.NewAccountViewModel
@{
    ViewBag.Title = "Register";
}
@section bottom {
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}

<div class="container">
    @if (ViewContext.ViewData.ModelState.Where(x => x.Key == "").Any())
    {
        <div>@Html.ValidationSummary(true, "", new { @class = "alert alert-danger text-danger col-12", @role = "alert" })</div>
    }
    @using (Html.BeginForm("Register", "Account"))
    {
        @Html.AntiForgeryToken()
        if (ViewContext.ViewData.ModelState.Where(x => x.Key == "").Any())
        {
            <div>@Html.ValidationSummary(true, "", new { @class = "alert alert-danger text-danger col-12", @role = "alert" });</div>
        }
        <h1>Create Account</h1>


        <div class="form-horizontal UserRegistrationForm">
            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.User.FirstName, htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.User.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.User.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.User.LastName, htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.User.LastName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.User.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>


            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.User.UserName, htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.User.UserName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.User.UserName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.User.UserEmail, htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.User.UserEmail, new { htmlAttributes = new { @class = "form-control"} })
                            @Html.ValidationMessageFor(model => model.User.UserEmail, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="col-md-10">
                            @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.PasswordConfirm, htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="col-md-10">
                            @Html.PasswordFor(model => model.PasswordConfirm, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.PasswordConfirm, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
            </div>
        </div>
    }
</div>
