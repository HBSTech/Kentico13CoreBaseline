{"version":3,"file":"helpers.js","mappings":";;;;;;;;;;AAAA;IAAA;IAQA,CAAC;IAPU,iBAAK,GAAZ;QACI,OAAO,OAAO,CAAC;IACnB,CAAC;IAEM,iBAAK,GAAZ;QACI,OAAO,OAAO,CAAC;IACnB,CAAC;IACL,kBAAC;AAAD,CAAC;AARY,kCAAW;;;;;;;UCAxB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;;ACtBA,4CAAmD;AASnD,kEAAkE;AAClE,MAAM,CAAC,WAAW,GAAG,yBAAW,CAAC","sources":["webpack://mvc/./FrontEndDev/typescript/Helper/Helpers/SiteMethods.ts","webpack://mvc/webpack/bootstrap","webpack://mvc/./FrontEndDev/typescript/Helper/index.ts"],"sourcesContent":["export class SiteMethods {\n    static hello() : string {\n        return \"Hello\";\n    }\n\n    static world() : string {\n        return \"World\";\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { SiteMethods } from './Helpers/SiteMethods'\n\n// declare my helper in the window interface\ndeclare global {\n    interface Window {\n        SiteMethods: SiteMethods\n    }\n}\n\n// Can access your methods with window.SiteMethods.theMethodName()\nwindow.SiteMethods = SiteMethods;\n"],"names":[],"sourceRoot":""}