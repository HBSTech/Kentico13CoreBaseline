//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at http://docs.kentico.com.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;

using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine.Types.Generic;
using CMS.DocumentEngine;

[assembly: RegisterDocumentType(GenericPage.CLASS_NAME, typeof(GenericPage))]

namespace CMS.DocumentEngine.Types.Generic
{
    /// <summary>
    /// Represents a content item of type GenericPage.
    /// </summary>
    public partial class GenericPage : TreeNode
    {
        #region "Constants and variables"

        /// <summary>
        /// The name of the data class.
        /// </summary>
        public const string CLASS_NAME = "Generic.GenericPage";


        /// <summary>
        /// The instance of the class that provides extended API for working with GenericPage fields.
        /// </summary>
        private readonly GenericPageFields mFields;

        #endregion


        #region "Properties"

        /// <summary>
        /// PageID.
        /// </summary>
        [DatabaseIDField]
        public int PageID
        {
            get
            {
                return ValidationHelper.GetInteger(GetValue("PageID"), 0);
            }
            set
            {
                SetValue("PageID", value);
            }
        }


        /// <summary>
        /// Node Name.
        /// </summary>
        [DatabaseField]
        public string PageName
        {
            get
            {
                return ValidationHelper.GetString(GetValue("PageName"), @"");
            }
            set
            {
                SetValue("PageName", value);
            }
        }


        /// <summary>
        /// Page Meta Data.
        /// </summary>
        [DatabaseField]
        public string Component_PageMetaData
        {
            get
            {
                return ValidationHelper.GetString(GetValue("Component_PageMetaData"), @"");
            }
            set
            {
                SetValue("Component_PageMetaData", value);
            }
        }


        /// <summary>
        /// Gets an object that provides extended API for working with GenericPage fields.
        /// </summary>
        [RegisterProperty]
        public GenericPageFields Fields
        {
            get
            {
                return mFields;
            }
        }


        /// <summary>
        /// Provides extended API for working with GenericPage fields.
        /// </summary>
        [RegisterAllProperties]
        public partial class GenericPageFields : AbstractHierarchicalObject<GenericPageFields>
        {
            /// <summary>
            /// The content item of type GenericPage that is a target of the extended API.
            /// </summary>
            private readonly GenericPage mInstance;


            /// <summary>
            /// Initializes a new instance of the <see cref="GenericPageFields" /> class with the specified content item of type GenericPage.
            /// </summary>
            /// <param name="instance">The content item of type GenericPage that is a target of the extended API.</param>
            public GenericPageFields(GenericPage instance)
            {
                mInstance = instance;
            }


            /// <summary>
            /// PageID.
            /// </summary>
            public int PageID
            {
                get
                {
                    return mInstance.PageID;
                }
                set
                {
                    mInstance.PageID = value;
                }
            }


            /// <summary>
            /// Node Name.
            /// </summary>
            public string PageName
            {
                get
                {
                    return mInstance.PageName;
                }
                set
                {
                    mInstance.PageName = value;
                }
            }


            /// <summary>
            /// Page Meta Data.
            /// </summary>
            public string Component_PageMetaData
            {
                get
                {
                    return mInstance.Component_PageMetaData;
                }
                set
                {
                    mInstance.Component_PageMetaData = value;
                }
            }
        }

        #endregion


        #region "Constructors"

        /// <summary>
        /// Initializes a new instance of the <see cref="GenericPage" /> class.
        /// </summary>
        public GenericPage() : base(CLASS_NAME)
        {
            mFields = new GenericPageFields(this);
        }

        #endregion
    }
}